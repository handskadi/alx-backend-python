#!/bin/bash

# kubctl-0x01 - Scale Django deployment, verify pods, load test with wrk, and monitor resource usage

set -e

DEPLOYMENT_NAME="messaging-app-deployment"
NAMESPACE="default"  # update if needed
SERVICE_NAME="messaging-app-service"
SERVICE_PORT=8000    # port your Django app listens on

# Check for kubectl
if ! command -v kubectl &>/dev/null; then
    echo "‚ùå kubectl is not installed."
    exit 1
fi

# Check for wrk
if ! command -v wrk &>/dev/null; then
    echo "‚ùå wrk is not installed. Install wrk to proceed."
    exit 1
fi

echo "üîÑ Scaling deployment '$DEPLOYMENT_NAME' to 3 replicas..."
kubectl scale deployment "$DEPLOYMENT_NAME" --replicas=3 -n "$NAMESPACE"

echo "‚è≥ Waiting for rollout to finish..."
kubectl rollout status deployment/"$DEPLOYMENT_NAME" -n "$NAMESPACE"

echo "‚úÖ Pods currently running:"
kubectl get pods -l app=messaging-app -n "$NAMESPACE"

SERVICE_IP=$(kubectl get svc "$SERVICE_NAME" -n "$NAMESPACE" -o jsonpath='{.spec.clusterIP}')
if [ -z "$SERVICE_IP" ]; then
    echo "‚ùå Could not find ClusterIP for service $SERVICE_NAME"
    exit 1
fi

echo "üî¨ Running load test on http://$SERVICE_IP:$SERVICE_PORT ..."
wrk -t2 -c10 -d30s "http://$SERVICE_IP:$SERVICE_PORT/"

echo
echo "üìä Resource usage of pods:"
kubectl top pods -l app=messaging-app -n "$NAMESPACE"
